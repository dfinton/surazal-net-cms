// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Image {
  id             String    @id @default(cuid())
  name           String    @default("")
  slug           String    @unique @default("")
  file_id        String?
  file_filesize  Int?
  file_width     Int?
  file_height    Int?
  file_extension String?
  createdAt      DateTime? @default(now())
}

model Link {
  id       String @id @default(cuid())
  slug     String @unique @default("")
  label    String @default("")
  linkList Json?
}

model Page {
  id         String    @id @default(cuid())
  content    Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author     User?     @relation("Page_author", fields: [authorId], references: [id])
  authorId   String?   @map("author")
  section    Section?  @relation("Page_section", fields: [sectionId], references: [id])
  sectionId  String?   @map("section")
  createdAt  DateTime? @default(now())
  modifiedAt DateTime? @default(now())

  @@index([authorId])
  @@index([sectionId])
}

model Post {
  id         String    @id @default(cuid())
  title      String    @default("")
  slug       String    @unique @default("")
  content    Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author     User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId   String?   @map("author")
  tags       Tag[]     @relation("Post_tags")
  createdAt  DateTime? @default(now())
  modifiedAt DateTime? @default(now())

  @@index([authorId])
}

model Section {
  id    String @id @default(cuid())
  slug  String @unique @default("")
  label String @default("")
  pages Page[] @relation("Page_section")
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  pages     Page[]    @relation("Page_author")
  createdAt DateTime? @default(now())
}
